
@article{wang_distributed_2020,
	title = {Distributed {ARIMA} {Models} for {Ultra}-long {Time} {Series}},
	url = {http://arxiv.org/abs/2007.09577},
	abstract = {Providing forecasts for ultra-long time series plays a vital role in various activities, such as investment decisions, industrial production arrangements, and farm management. This paper develops a novel distributed forecasting framework to tackle challenges associated with forecasting ultra-long time series by utilizing the industry-standard MapReduce framework. The proposed model combination approach facilitates distributed time series forecasting by combining the local estimators of ARIMA (AutoRegressive Integrated Moving Average) models delivered from worker nodes and minimizing a global loss function. In this way, instead of unrealistically assuming the data generating process (DGP) of an ultra-long time series stays invariant, we make assumptions only on the DGP of subseries spanning shorter time periods. We investigate the performance of the proposed distributed ARIMA models on an electricity demand dataset. Compared to ARIMA models, our approach results in significantly improved forecasting accuracy and computational efficiency both in point forecasts and prediction intervals, especially for longer forecast horizons. Moreover, we explore some potential factors that may affect the forecasting performance of our approach.},
	urldate = {2020-11-29},
	journal = {arXiv:2007.09577 [stat]},
	author = {Wang, Xiaoqian and Kang, Yanfei and Hyndman, Rob J. and Li, Feng},
	month = jul,
	year = {2020},
	note = {arXiv: 2007.09577},
	keywords = {Statistics - Applications, Statistics - Computation},
	file = {arXiv Fulltext PDF:/home/bsuconn/Zotero/storage/T95EPMXN/Wang et al. - 2020 - Distributed ARIMA Models for Ultra-long Time Serie.pdf:application/pdf;arXiv.org Snapshot:/home/bsuconn/Zotero/storage/SE8F293D/Wang et al. - 2020 - Distributed ARIMA Models for Ultra-long Time Serie.html:text/html}
}

@misc{hogue_uci_2019,
	title = {{UCI} {Machine} {Learning} {Repository}},
	author = {Hogue, John},
	date={2019-05-07},
	url = {https://archive.ics.uci.edu/ml/datasets/Metro+Interstate+Traffic+Volume#},
	urldate = {2020-11-30},
	keywords = {Data},
	file = {UCI Machine Learning Repository\: Metro Interstate Traffic Volume Data Set:/home/bsuconn/Zotero/storage/DJNB8ACB/Metro+Interstate+Traffic+Volume.html:text/html}
}

@book{hyndman_ffp2_2020,
	edition = {2nd Edition},
	title = {Forecasting: {Principles} and {Practice}},
	shorttitle = {12.9 {Dealing} with missing values and outliers {\textbar} {Forecasting}},
	url = {https://Otexts.com/fpp2/},
	language = {English},
	urldate = {2020-12-01},
	publisher = {OTexts: Melbourne, Australia},
	author = {{Hyndman, Rob J.} and {Athanasopoulos, George}},
	month = dec,
	year = {2020},
	file = {Snapshot:/home/bsuconn/Zotero/storage/M43RQ785/missing-outliers.html:text/html}
}

@misc{wang_xqnwang_github_2020,
	title = {xqnwang/darima},
	url = {https://github.com/xqnwang/darima},
	abstract = {Distributed ARIMA Models. Contribute to xqnwang/darima development by creating an account on GitHub.},
	urldate = {2020-12-01},
	author = {Wang, Xiaoqian},
	month = sep,
	year = {2020},
	note = {original-date: 2020-06-30T07:33:48Z},
	keywords = {arima, distributed-computing, spark, time-series-forecasting}
}

@misc{roach_camroach87gefcom2017data_2020,
	title = {camroach87/gefcom2017data},
	copyright = {MIT License         ,                 MIT License},
	url = {https://github.com/camroach87/gefcom2017data},
	abstract = {Data for eight zones in New England as used in the 2017 Global Energy Forecasting Competition (GEFCom2017).},
	urldate = {2020-12-06},
	author = {Roach, Cameron},
	month = mar,
	year = {2020},
	note = {original-date: 2018-12-13T01:46:20Z}
}

@article{das_predictive_2020,
	title = {Predictive {Inference} for {Locally} {Stationary} {Time} {Series} {With} an {Application} to {Climate} {Data}},
	issn = {0162-1459, 1537-274X},
	url = {https://www.tandfonline.com/doi/full/10.1080/01621459.2019.1708368},
	doi = {10.1080/01621459.2019.1708368},
	abstract = {The model-free prediction principle of Politis has been successfully applied to general regression problems, as well as problems involving stationary time series. However, with long time series, for example, annual temperature measurements spanning over 100 years or daily financial returns spanning several years, it may be unrealistic to assume stationarity throughout the span of the dataset. In this article, we show how model-free prediction can be applied to handle time series that are only locally stationary, that is, they can be assumed to be stationary only over short time-windows. Surprisingly, there is little literature on point prediction for general locally stationary time series even in model-based setups, and there is no literature whatsoever on the construction of prediction intervals of locally stationary time series. We attempt to fill this gap here as well. Both one-step-ahead point predictors and prediction intervals are constructed, and the performance of model-free is compared to model-based prediction using models that incorporate a trend and/or heteroscedasticity. Both aspects of the article, model-free and model-based, are novel in the context of time-series that are locally (but not globally) stationary. We also demonstrate the application of our model-based and model-free prediction methods to speleothem climate data which exhibits local stationarity and show that our best model-free point prediction results outperform that obtained with the RAMPFIT algorithm previously used for analysis of this type of data. Supplementary materials for this article are available online.},
	language = {en},
	urldate = {2020-12-06},
	journal = {Journal of the American Statistical Association},
	author = {Das, Srinjoy and Politis, Dimitris N.},
	month = feb,
	year = {2020},
	pages = {1--16},
	file = {Das and Politis - 2020 - Predictive Inference for Locally Stationary Time S.pdf:/home/bsuconn/Zotero/storage/XX8TIPQ4/Das and Politis - 2020 - Predictive Inference for Locally Stationary Time S.pdf:application/pdf}
}

@article{hyndman_automatic_2008,
	title = {Automatic {Time} {Series} {Forecasting}: {The} forecast {Package} for {R}},
	volume = {27},
	issn = {1548-7660},
	doi = {10.18637/jss.v027.i03},
	abstract = {Automatic forecasts of large numbers of univariate time series are often needed in
business and other contexts. We describe two automatic forecasting algorithms that have
been implemented in the forecast package for R. The first is based on innovations state
space models that underly exponential smoothing methods. The second is a step-wise
algorithm for forecasting with ARIMA models. The algorithms are applicable to both
seasonal and non-seasonal data, and are compared and illustrated using four real time
series. We also briefly describe some of the other functionality available in the forecast
package.},
	language = {English},
	number = {3},
	journal = {Journal of Statistical Software},
	author = {{Rob J. Hyndman} and {Yeasmin Khandakar}},
	month = jul,
	year = {2008},
	pages = {1--22},
	file = {_.pdf:/home/bsuconn/Zotero/storage/4ZDAL9UA/_.pdf:application/pdf}
}

@article{zhu_dlsa_2019,
	title = {Least {Squares} {Approximation} for a {Distributed} {System}},
	url = {http://arxiv.org/abs/1908.04904},
	abstract = {In this work, we develop a distributed least squares approximation (DLSA) method that is able to solve a large family of regression problems (e.g., linear regression, logistic regression, and Cox's model) on a distributed system. By approximating the local objective function using a local quadratic form, we are able to obtain a combined estimator by taking a weighted average of local estimators. The resulting estimator is proved to be statistically as efficient as the global estimator. Moreover, it requires only one round of communication. We further conduct shrinkage estimation based on the DLSA estimation using an adaptive Lasso approach. The solution can be easily obtained by using the LARS algorithm on the master node. It is theoretically shown that the resulting estimator possesses the oracle property and is selection consistent by using a newly designed distributed Bayesian information criterion (DBIC). The finite sample performance and the computational efficiency are further illustrated by an extensive numerical study and an airline dataset. The airline dataset is 52 GB in size. The entire methodology has been implemented in Python for a de-facto standard Spark system. The proposed DLSA algorithm on the Spark system takes 26 minutes to obtain a logistic regression estimator, whereas a full likelihood algorithm takes 15 hours to obtain an inferior result.},
	urldate = {2020-12-06},
	journal = {arXiv:1908.04904 [cs, stat]},
	author = {Zhu, Xuening and Li, Feng and Wang, Hansheng},
	month = nov,
	year = {2019},
	note = {arXiv: 1908.04904},
	keywords = {Statistics - Computation, Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Machine Learning, Statistics - Machine Learning, Statistics - Methodology},
	file = {arXiv Fulltext PDF:/home/bsuconn/Zotero/storage/2MTAGNJG/Zhu et al. - 2019 - Least Squares Approximation for a Distributed Syst.pdf:application/pdf;arXiv.org Snapshot:/home/bsuconn/Zotero/storage/3FKH4RFJ/1908.html:text/html}
}

@misc{apache_spark,
	title = {Apache {Spark}™ - {Unified} {Analytics} {Engine} for {Big} {Data}},
	author = {Apache Software Foundation},
	url = {https://spark.apache.org/},
	urldate = {2020-12-06},
	file = {Apache Spark™ - Unified Analytics Engine for Big Data:/home/bsuconn/Zotero/storage/SZN2T5EG/spark.apache.org.html:text/html}
}

@article{eglash_broken_2007,
	title = {Broken {Metaphor}: {The} {Master}-{Slave} {Analogy} in {Technical} {Literature}},
	volume = {48},
	issn = {0040-165X},
	shorttitle = {Broken {Metaphor}},
	url = {http://www.jstor.org/stable/40061475},
	number = {2},
	urldate = {2020-12-06},
	journal = {Technology and Culture},
	author = {Eglash, Ron},
	year = {2007},
	note = {Publisher: [The Johns Hopkins University Press, Society for the History of Technology]},
	pages = {360--369}
}

@article{landau_tech_2020,
	title = {Tech {Confronts} {Its} {Use} of the {Labels} ‘{Master}’ and ‘{Slave}’},
	issn = {1059-1028},
	url = {https://www.wired.com/story/tech-confronts-use-labels-master-slave/},
	abstract = {Companies and programmers are reexamining how technical terms are used amid Black Lives Matter protests. But some worry the changes are empty symbolism.},
	language = {en-us},
	urldate = {2020-12-06},
	journal = {Wired},
	author = {Landau, Elizabeth},
	month = jul,
	year = {2020},
	keywords = {business, computers and software, developers, diversity, github, programming, web},
	file = {Snapshot:/home/bsuconn/Zotero/storage/9SF4G8F8/tech-confronts-use-labels-master-slave.html:text/html}
}

@book{shumway_time_2019,
	address = {Boca Raton, FL, USA},
	edition = {1st},
	series = {Texts in {Statistical} {Science}},
	title = {Time {Series}: {A} {Data} {Analysis} {Approach} {Using} {R}},
	isbn = {978-0-367-22109-6},
	abstract = {Stoffer, David S.},
	language = {English},
	publisher = {CRC Press, Taylor \& Francis Group},
	author = {Shumway, Robert H.},
	year = {2019}
}
